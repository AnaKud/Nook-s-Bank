//
//  ProphetPricesInteractor.swift
//  AnimalCrossing
//
//  Created by Anastasiya Kudasheva on 08.07.2021.
//  Copyright (c) All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol IProphetPricesInteractorBusinessLogic: ProphetPricesDataStore
{
  func makeTurnipPricesRequest()
}

protocol ProphetPricesDataStore
{
  var dataForRequest: TurnipPrices? { get set }
}

class ProphetPricesInteractor: IProphetPricesInteractorBusinessLogic//, ProphetPricesDataStore
{
    var dataForRequest: TurnipPrices?
    
  var presenter: IProphetPricesPresenter
  var worker: ProphetPricesWorker
  //var name: String = ""
  
    init(presenter: IProphetPricesPresenter, worker: ProphetPricesWorker) {
        self.presenter = presenter
        self.worker = worker
    }
    
  // MARK: Do something
  
  func makeTurnipPricesRequest(){
     let request = ProphetPrices.Turnip.Request(from: dataForRequest)
    worker.doSomeWork(with: request) { [ weak self ] result in
        
        let existingPrices = request.pricesArray()
        let response = ProphetPrices.Turnip.Response(from: result, existingPrices: existingPrices)
        print(response)
        
        self?.presenter.presentSomething(response: response)
        print(response)
    }
    
  }
}
